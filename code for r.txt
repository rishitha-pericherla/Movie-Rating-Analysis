distribution of ratings for various genres

 require(reshape2);
> movie_data_sub <- movie_data[, c(1,2,4,5,17,18,19,20,21,22)];
> View(movie_data_sub)
> View(movie_data_sub)
> movie_data_sub <- melt(movie_data_sub, c(1,2,3,4));
> names(movie_data_sub)[5] <- c("Genre");
> movie_data_sub <- subset(movie_data_sub, value == 1);
> g_genre <- ggplot(data = movie_data_sub, aes(x = Genre, y = rating, fill = Genre));
> g_genre + geom_boxplot() + xlab("Genre") + ylab("Rating") + ggtitle("Distribution of ratings for various genre");

================================================================================

frequency of movie ratings

count(movie_data_sub,'Genre')
        Genre  freq
1      Action  4688
2   Animation  3690
3      Comedy 17271
4       Drama 21811
5 Documentary  3472
6     Romance  4744
> g_movie <- ggplot(data = movie_data_sub, aes(y = freq, x = Genre, fill = Genre));
> freq_decade_movie <- count(movie_data_sub,'Genre');
> freq_genre_movie <- count(movie_data_sub,'Genre');
> g_movie <- ggplot(data = freq_genre_movie, aes(y = freq, x = Genre, fill = Genre));
> g_movie + geom_bar(stat = "identity", width = 0.2, , position = "identity") + guides(fill = FALSE) + xlab("Genres") + ylab("Number of movies") + 
ggtitle("Frequency of movies by genres") + theme(axis.text.x = element_text(angle = 45, hjust = 1));
=====================================================================================

frequnecy of movie over decades

g_movie <- ggplot(data = decade, aes(y = freq, x = decade, fill = decade));
g_movie + geom_bar(stat = "identity", width = 0.2, , position = "identity") + guides(fill = FALSE) + xlab("Decades") + 
ylab("Number of movies") + ggtitle("Frequency of movies by decades") + theme(axis.text.x = element_text(angle = 45, hjust = 1));

====================================================================================
mean of runtime of successful movies

> pop <- subset(movies,rating >= 9)
> movies <- read.csv("C:/Users/DELL/Downloads/movies.csv")
>   View(movies)
> pop <- subset(movies,rating >= 9)
> View(pop)
> mean(pop$length)
[1] 66.0479
=========================================================================
popular movie according to votes and ratings in 2015

allmovies <- allmovies[-22];
> allmovies <- allmovies[-18];
> allmovies <- allmovies[-2];
> allmovies$C4 <- (allmovies$Metacritic_User + allmovies$IMDB )
> allmovies$C4 <- (allmovies$C4/2)
> View(allmovies)
> allmovies <- read.csv("C:/Users/DELL/Downloads/allmovies.csv")
>   View(allmovies)
> allmovies <- allmovies[-14];
> allmovies <- allmovies[-14];
> allmovies <- allmovies[-14];
> allmovies <- allmovies[-14];
> allmovies <- allmovies[-14];
> allmovies <- allmovies[-17];
> allmovies[,namevector] <- ""
> allmovies$rating100 <- (allmovies$RottenTomatoes + allmovies$RottenTomatoes_User + allmovies$Metacritic)
> allmovies$rating100 <- (allmovies$rating100/3)
> allmovies[,namevector] <- ""
> allmovies$norm <- (allmovies$RT_norm + allmovies$RT_user_norm + allmovies$Metacritic_norm + allmovies$Metacritic_user_nom + allmovies$IMDB_norm )
> allmovies$norm <- (allmovies$norm/5)
> allmovies$votes <- (allmovies$Metacritic_user_vote_count + allmovies$IMDB_user_vote_count + allmovies$Fandango_votes )
> allmovies$votes <- (allmovies$votes/3)

> allmovies[which(allmovies$votes == max(allmovies$votes)),]
                        FILM RottenTomatoes RottenTomatoes_User Metacritic Metacritic_User IMDB
15 The Imitation Game (2014)             90                  92         73             8.2  8.1
   Fandango_Stars Fandango_Ratingvalue RT_norm RT_user_norm Metacritic_norm Metacritic_user_nom
15              5                  4.6     4.5          4.6            3.65                 4.1
   IMDB_norm Metacritic_user_vote_count IMDB_user_vote_count Fandango_votes    votes rating100
15      4.05                        566               334164           8055 114261.7        85
   norm
15 4.18
> allmovies[which(allmovies$rating100 == max(allmovies$rating100)),]
                 FILM RottenTomatoes RottenTomatoes_User Metacritic Metacritic_User IMDB Fandango_Stars
141 Inside Out (2015)             98                  90         94             8.9  8.6            4.5
    Fandango_Ratingvalue RT_norm RT_user_norm Metacritic_norm Metacritic_user_nom IMDB_norm
141                  4.5     4.9          4.5             4.7                4.45       4.3
    Metacritic_user_vote_count IMDB_user_vote_count Fandango_votes    votes rating100 norm
141                        807                96252          15749 37602.67        94 4.57
> allmovies[which(allmovies$norm == max(allmovies$norm)),]
                 FILM RottenTomatoes RottenTomatoes_User Metacritic Metacritic_User IMDB Fandango_Stars
141 Inside Out (2015)             98                  90         94             8.9  8.6            4.5
    Fandango_Ratingvalue RT_norm RT_user_norm Metacritic_norm Metacritic_user_nom IMDB_norm
141                  4.5     4.9          4.5             4.7                4.45       4.3
    Metacritic_user_vote_count IMDB_user_vote_count Fandango_votes    votes rating100 norm
141                        807                96252          15749 37602.67        94 4.57 












=======================================================================
voting and rating relation

?length <- movies$length
> rating <- movies$rating
> cor(length, rating, method = "Spearman")
Error in match.arg(method) : 
  'arg' should be one of “pearson”, “kendall”, “spearman”
> cor(length, rating, method = "spearman")
[1] 0.02057265
> ggplot(movies, aes(x=rating, y=votes))
Error: could not find function "ggplot"
> library("plyr", lib.loc="C:/Users/DELL/Desktop/R - Copy/R-3.3.0/library")
> library("ggplot2", lib.loc="C:/Users/DELL/Desktop/R - Copy/R-3.3.0/library")
Use suppressPackageStartupMessages() to eliminate package startup
messages.
> ggplot(movies, aes(x=rating, y=votes))
> ggplot(movies, aes(x=rating, y=votes))+geom_point()+geom_smooth(method="lm", se=FALSE)




